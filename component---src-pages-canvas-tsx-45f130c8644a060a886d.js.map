{"version":3,"file":"component---src-pages-canvas-tsx-45f130c8644a060a886d.js","mappings":"6JAGMA,EAASC,IAAAA,OACbC,EAASD,IAAAA,OACTE,EAASF,IAAAA,OACTG,EAASH,IAAAA,OACTI,EAAQJ,IAAAA,MACRK,EAAYL,IAAAA,UAERM,EAAiB,WACrB,MAAO,CACLC,KAAM,GACNC,YAAa,GACbC,SAAU,KACVC,OAAQ,CACNC,UAAW,IAAIC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,KANnE,EAsGA,UA3Fe,WACb,IAAMC,GAAQC,EAAAA,EAAAA,UACRC,GAASD,EAAAA,EAAAA,QAAOlB,EAAOoB,UACvBC,GAAYH,EAAAA,EAAAA,SAAO,GAUnBI,EAAa,SAACC,EAAWC,GAC7B,IAAMC,EAAO,GAAqB,GAAhBZ,KAAKE,SACvB,OAAQF,KAAKC,MAAsB,EAAhBD,KAAKE,WACtB,KAAK,EACH,OAAOX,EAAOsB,UAAUH,EAAGC,EAAGC,EAAMA,EAAMlB,KAC5C,KAAK,EACH,OAAOH,EAAOuB,QAAQJ,EAAGC,EAAG,EAAGC,EAAMlB,KACvC,QACE,OAAOH,EAAOwB,OAAOL,EAAGC,EAAGC,EAAMlB,KARvC,EAmEA,OAjDAsB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAKb,EAAMc,QAAQC,YACnBC,EAAKhB,EAAMc,QAAQG,aAEnBvB,EAAST,EAAOkB,OAAO,CAC3Be,QAASlB,EAAMc,QACfZ,OAAQA,EAAOY,QACfK,QAAS,CACPC,MAAOP,EACPQ,OAAQR,EACRS,YAAY,EACZC,WAAY,iBAIVC,EAAOrC,EAAOsB,UAAU,IAAK,IAAK,GAAI,IACtCgB,EAAOtC,EAAOsB,UAAU,IAAK,GAAI,GAAI,IACrCiB,EAAUvC,EAAOsB,UAAUI,EAAK,GAAI,GAAIA,EAAI,GAAI,CACpDc,UAAU,IAENC,EAAWzC,EAAOsB,WAAW,GAAIO,EAAK,EAAG,GAAIA,EAAI,CACrDW,UAAU,IAENE,EAAY1C,EAAOsB,UAAUI,EAAK,GAAIG,EAAK,EAAG,GAAIA,EAAI,CAC1DW,UAAU,IAEN9B,EAAQV,EAAOsB,UAAUI,EAAK,EAAGG,EAAK,GAAIH,EAAI,GAAI,CACtDc,UAAU,IAGZtC,EAAUyC,IAAI5B,EAAOY,QAAQiB,MAAO,CAClCP,EACAC,EACAC,EACAE,EACAC,EACAhC,IAIFZ,EAAO+C,IAAItC,GAGX,IAAMuC,EAAS/C,EAAOiB,SAGtBjB,EAAO8C,IAAIC,EAAQ/B,EAAOY,QA9CnB,GA+CN,IAGDoB,EAAAA,cAAAA,MAAAA,CACEC,YA7Ee,WACjB/B,EAAUU,SAAU,CADtB,EA8EIsB,UA1Ea,WACfhC,EAAUU,SAAU,CADtB,EA2EIuB,YA3DoB,SAACC,GACnBlC,EAAUU,SACZ1B,EAAM0C,IAAI5B,EAAOY,QAAQiB,MAAO,CAAC1B,EAAWiC,EAAEC,QAASD,EAAEE,UAF7D,EA4DIC,UAAU,8BACVC,IAAK1C,GAtFX,C","sources":["webpack://lzm0.github.io/./src/pages/canvas.tsx"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport Matter from \"matter-js\";\n\nconst Engine = Matter.Engine,\n  Render = Matter.Render,\n  Runner = Matter.Runner,\n  Bodies = Matter.Bodies,\n  World = Matter.World,\n  Composite = Matter.Composite;\n\nconst baseProperties = () => {\n  return {\n    mass: 10,\n    restitution: 0.9,\n    friction: 0.005,\n    render: {\n      fillStyle: `#${Math.floor(Math.random() * 16777215).toString(16)}`,\n    },\n  };\n};\n\nconst Canvas = () => {\n  const scene = useRef() as React.MutableRefObject<HTMLDivElement>;\n  const engine = useRef(Engine.create());\n  const isPressed = useRef(false);\n\n  const handleDown = () => {\n    isPressed.current = true;\n  };\n\n  const handleUp = () => {\n    isPressed.current = false;\n  };\n\n  const randomBody = (x: number, y: number) => {\n    const size = 30 + Math.random() * 30;\n    switch (Math.floor(Math.random() * 3)) {\n      case 0:\n        return Bodies.rectangle(x, y, size, size, baseProperties());\n      case 1:\n        return Bodies.polygon(x, y, 3, size, baseProperties());\n      default:\n        return Bodies.circle(x, y, size, baseProperties());\n    }\n  };\n\n  const handleAddCircle = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (isPressed.current) {\n      World.add(engine.current.world, [randomBody(e.clientX, e.clientY)]);\n    }\n  };\n\n  useEffect(() => {\n    const cw = scene.current.offsetWidth;\n    const ch = scene.current.offsetHeight;\n\n    const render = Render.create({\n      element: scene.current,\n      engine: engine.current,\n      options: {\n        width: cw,\n        height: cw,\n        wireframes: false,\n        background: \"transparent\",\n      },\n    });\n\n    const boxA = Bodies.rectangle(400, 200, 80, 80);\n    const boxB = Bodies.rectangle(450, 50, 80, 80);\n    const ceiling = Bodies.rectangle(cw / 2, -25, cw, 50, {\n      isStatic: true,\n    });\n    const leftWall = Bodies.rectangle(-25, ch / 2, 50, ch, {\n      isStatic: true,\n    });\n    const rightWall = Bodies.rectangle(cw + 25, ch / 2, 50, ch, {\n      isStatic: true,\n    });\n    const floor = Bodies.rectangle(cw / 2, ch + 25, cw, 50, {\n      isStatic: true,\n    });\n\n    Composite.add(engine.current.world, [\n      boxA,\n      boxB,\n      ceiling,\n      leftWall,\n      rightWall,\n      floor,\n    ]);\n\n    // run the renderer\n    Render.run(render);\n\n    // create runner\n    const runner = Runner.create();\n\n    // run the engine\n    Runner.run(runner, engine.current);\n  }, []);\n\n  return (\n    <div\n      onMouseDown={handleDown}\n      onMouseUp={handleUp}\n      onMouseMove={handleAddCircle}\n      className=\"z-10 absolute w-full h-full\"\n      ref={scene}\n    />\n  );\n};\n\nexport default Canvas;\n"],"names":["Engine","Matter","Render","Runner","Bodies","World","Composite","baseProperties","mass","restitution","friction","render","fillStyle","Math","floor","random","toString","scene","useRef","engine","create","isPressed","randomBody","x","y","size","rectangle","polygon","circle","useEffect","cw","current","offsetWidth","ch","offsetHeight","element","options","width","height","wireframes","background","boxA","boxB","ceiling","isStatic","leftWall","rightWall","add","world","run","runner","React","onMouseDown","onMouseUp","onMouseMove","e","clientX","clientY","className","ref"],"sourceRoot":""}